summary(fit)
pooled = pool(fit)
pooled
pool.r.squared(fit)
# 使用第er种模型来拟合
fit = with(mi_data, lm(X3~X1))
summary(fit)
pooled = pool(fit)
pooled
pool.r.squared(fit)
# 导入包
library(mice)
library(VIM)
library(dplyr)
library(xlsx)
# 读取数据
data<-read.xlsx("D:/lagua/CODING/R-learn/R-code/Chap5_model/missing_data.xls", 1,
header=0,
colClasses=rep("numeric",4))
# 查看数据
data
summary(data)
md.pattern(data)
aggr(data,prop=T,numbers=T,col=c('white','grey'))
# 准备使用mice进行插值
m <- 5
mi_data <- mice(data,m, seed=1)
mi_data$imp
mi_data$imp$X1
help(mice)
# 使用第一种模型来拟合
fit = with(mi_data, lm(X1~X3))
summary(fit)
pooled = pool(fit)
pooled
pool.r.squared(fit)
fit
complete.data = complete(mi_data, 1)
complete.data
write.table(complete.data, file=r'D:\lagua\CODING\R-learn\for student\chapter5\电力窃漏电用户自动识别\上机实验\data\complete_data.xlsx')
write.table(complete.data, file='D:\lagua\CODING\R-learn\for student\chapter5\电力窃漏电用户自动识别\上机实验\data\complete_data.xlsx')
library(dplyr)
library(purrr)
library(xlsx)
# Sys.setlocale("LC_ALL","Chinese")
setwd("D:/lagua/CODING/R-learn/R-code/Chap2-DataPreparation")
bankLoan = read.csv("bankloan.csv", header=TRUE,
fileEncoding ="GBK")
# ----------------数据空值检查------------------
#----------列检查-----------
# 注意：需要检查一下数据是否有列是NA，
# 使用：以下查看
colnames(bankLoan)
length(colnames(bankLoan))
#----------行检查-----------
# 行中是否有空的值也需要查看，使用summary(bankLoan)查看
colnames(bankLoan) = c("Age", "Edu", "WorkAge",
"Address", "Income",
"DebtRatio", "CreditDebt",
"OtherDebt", "Default")
summary(bankLoan)
# 调整数据框列的类型
bankLoan = bankLoan %>%
mutate_at(.vars = vars("Address"),
.fun = as.factor) %>%
mutate_at(.vars = vars("Age", "WorkAge", "Income",
"DebtRatio","CreditDebt","OtherDebt"),
.fun = as.numeric) %>%
mutate_at(.vars = vars("Age", "Edu", "WorkAge"),
.fun = as.integer)
# 查看数据
bankLoan$Age
# na.omit(bankLoan)
summary(bankLoan)
# 找出列变量的所有整数型或者数值型的数据
loan.nvars <- bankLoan[,lapply(bankLoan,class)=="integer"
| lapply(bankLoan,class)=="numeric"]
length(colnames(loan.nvars))
summary(loan.nvars)
plot(sort(loan.nvars$Age))
plot(loan.nvars[c(1, 5)])
length(colnames(loan.nvars))
class(loan.nvars$Age)
loan.age = summarise(group_by(loan.nvars$Age), count_Age=n())
descrip <- function(nvar)
{
nmiss <- length(which(is.na(nvar)))
mean <- mean(nvar,na.rm=TRUE)
std <- sd(nvar,na.rm=TRUE)
min <- min(nvar,na.rm=TRUE)
Q1 <- quantile(nvar,0.25,na.rm=TRUE)
median <- median(nvar,na.rm=TRUE)
Q3 <- quantile(nvar,0.75,na.rm=TRUE)
max <- max(nvar,na.rm=TRUE)
return(c(nmiss,mean,std,min,Q1,median,Q3,max))
}
loan_nvars_description <- lapply(loan.nvars,descrip) %>%
as.data.frame() %>% t()
colnames(loan_nvars_description) <- c("nmiss","mean","std","min","Q1",
"median","Q3","max")
loan_nvars_description
# ------------数值变量直方图输出------------
library(showtext)
library(sysfonts)
library(showtextdb)
font_add("SIMHEI","SIMHEI.ttf")
font_add("SIMSUN","SIMSUN.TTC")
font_add("kaishu","simkai.ttf")
par(family='STKaiti')
# 设置family='GB1'
pdf("./ch2_case2-2_histogram.pdf",family='GB1')
par(c(3, 3))
for (i in 1:length(loan.nvars)){
hist(loan.nvars[,i],
xlab=names(loan.nvars)[i],
main=paste("Histogram of",names(loan.nvars)[i]),
col = "grey")
}
dev.off()
library(MASS)
colnames(bankLoan)
a = c(1:3)
list(a)
help(list)
colnames(loan.nvars)
loanNew = cbind(bankLoan, loan.nvars[,9:])
loanNew = cbind(bankLoan, loan.nvars[,9:11])
# log.vars = c("Income", "CreditRatio", "OtherDebt")
log.vars = c(5, 7, 8)
# new_col = list()
for (i in c(5, 7, 8)){
var.names = colnames(loan.nvars)
cur_name = paste(var.names[i],  '.', 1, sep = '')
new_col = log(loan.nvars[, i] + 1)
# LoanNew = cbind(bankLoan)
loan.nvars[[cur_name]] = new_col
hist(loan.nvars[[cur_name]],
xlab=paste(var.names[i],  '.', 1, sep = ''),
main=paste("Histogram of",cur_name),
col = "grey")
}
loanNew = cbind(bankLoan, loan.nvars[,9:11])
colnames(loanNew)
bankLoan = read.csv("bankloan.csv", header=TRUE,
fileEncoding ="GBK")
# ----------------数据空值检查------------------
#----------列检查-----------
# 注意：需要检查一下数据是否有列是NA，
# 使用：以下查看
colnames(bankLoan)
length(colnames(bankLoan))
#----------行检查-----------
# 行中是否有空的值也需要查看，使用summary(bankLoan)查看
colnames(bankLoan) = c("Age", "Edu", "WorkAge",
"Address", "Income",
"DebtRatio", "CreditDebt",
"OtherDebt", "Default")
summary(bankLoan)
# 调整数据框列的类型
bankLoan = bankLoan %>%
mutate_at(.vars = vars("Address"),
.fun = as.factor) %>%
mutate_at(.vars = vars("Age", "WorkAge", "Income",
"DebtRatio","CreditDebt","OtherDebt"),
.fun = as.numeric) %>%
mutate_at(.vars = vars("Age", "Edu", "WorkAge"),
.fun = as.integer)
# 查看数据
bankLoan$Age
# na.omit(bankLoan)
summary(bankLoan)
# 找出列变量的所有整数型或者数值型的数据
loan.nvars <- bankLoan[,lapply(bankLoan,class)=="integer"
| lapply(bankLoan,class)=="numeric"]
length(colnames(loan.nvars))
summary(loan.nvars)
plot(sort(loan.nvars$Age))
plot(loan.nvars[c(1, 5)])
length(colnames(loan.nvars))
descrip <- function(nvar)
{
nmiss <- length(which(is.na(nvar)))
mean <- mean(nvar,na.rm=TRUE)
std <- sd(nvar,na.rm=TRUE)
min <- min(nvar,na.rm=TRUE)
Q1 <- quantile(nvar,0.25,na.rm=TRUE)
median <- median(nvar,na.rm=TRUE)
Q3 <- quantile(nvar,0.75,na.rm=TRUE)
max <- max(nvar,na.rm=TRUE)
return(c(nmiss,mean,std,min,Q1,median,Q3,max))
}
loan_nvars_description <- lapply(loan.nvars,descrip) %>%
as.data.frame() %>% t()
colnames(loan_nvars_description) <- c("nmiss","mean","std","min","Q1",
"median","Q3","max")
loan_nvars_description
# ------------数值变量直方图输出------------
library(showtext)
library(sysfonts)
library(showtextdb)
font_add("SIMHEI","SIMHEI.ttf")
font_add("SIMSUN","SIMSUN.TTC")
font_add("kaishu","simkai.ttf")
par(family='STKaiti')
# 设置family='GB1'
pdf("./ch2_case2-2_histogram.pdf",family='GB1')
par(c(3, 3))
for (i in 1:length(loan.nvars)){
hist(loan.nvars[,i],
xlab=names(loan.nvars)[i],
main=paste("Histogram of",names(loan.nvars)[i]),
col = "grey")
}
dev.off()
library(MASS)
colnames(bankLoan)
par(c(1, 3))
# log.vars = c("Income", "CreditRatio", "OtherDebt")
log.vars = c(5, 7, 8)
# new_col = list()
for (i in c(5, 7, 8)){
var.names = colnames(loan.nvars)
cur_name = paste(var.names[i],  '.', 1, sep = '')
new_col = log(loan.nvars[, i] + 1)
# LoanNew = cbind(bankLoan)
loan.nvars[[cur_name]] = new_col
hist(loan.nvars[[cur_name]],
xlab=paste(var.names[i],  '.', 1, sep = ''),
main=paste("Histogram of",cur_name),
col = "grey")
}
loanNew = cbind(bankLoan, loan.nvars[,9:11])
bankLoan = read.csv("bankloan.csv", header=TRUE,
fileEncoding ="GBK")
# ----------------数据空值检查------------------
#----------列检查-----------
# 注意：需要检查一下数据是否有列是NA，
# 使用：以下查看
colnames(bankLoan)
length(colnames(bankLoan))
#----------行检查-----------
# 行中是否有空的值也需要查看，使用summary(bankLoan)查看
colnames(bankLoan) = c("Age", "Edu", "WorkAge",
"Address", "Income",
"DebtRatio", "CreditDebt",
"OtherDebt", "Default")
summary(bankLoan)
# 调整数据框列的类型
bankLoan = bankLoan %>%
mutate_at(.vars = vars("Address"),
.fun = as.factor) %>%
mutate_at(.vars = vars("Age", "WorkAge", "Income",
"DebtRatio","CreditDebt","OtherDebt"),
.fun = as.numeric) %>%
mutate_at(.vars = vars("Age", "Edu", "WorkAge"),
.fun = as.integer)
# 查看数据
bankLoan$Age
# na.omit(bankLoan)
summary(bankLoan)
# 找出列变量的所有整数型或者数值型的数据
loan.nvars <- bankLoan[,lapply(bankLoan,class)=="integer"
| lapply(bankLoan,class)=="numeric"]
length(colnames(loan.nvars))
summary(loan.nvars)
plot(sort(loan.nvars$Age))
plot(loan.nvars[c(1, 5)])
length(colnames(loan.nvars))
descrip <- function(nvar)
{
nmiss <- length(which(is.na(nvar)))
mean <- mean(nvar,na.rm=TRUE)
std <- sd(nvar,na.rm=TRUE)
min <- min(nvar,na.rm=TRUE)
Q1 <- quantile(nvar,0.25,na.rm=TRUE)
median <- median(nvar,na.rm=TRUE)
Q3 <- quantile(nvar,0.75,na.rm=TRUE)
max <- max(nvar,na.rm=TRUE)
return(c(nmiss,mean,std,min,Q1,median,Q3,max))
}
loan_nvars_description <- lapply(loan.nvars,descrip) %>%
as.data.frame() %>% t()
colnames(loan_nvars_description) <- c("nmiss","mean","std","min","Q1",
"median","Q3","max")
loan_nvars_description
# ------------数值变量直方图输出------------
library(showtext)
library(sysfonts)
library(showtextdb)
font_add("SIMHEI","SIMHEI.ttf")
font_add("SIMSUN","SIMSUN.TTC")
font_add("kaishu","simkai.ttf")
par(family='STKaiti')
# 设置family='GB1'
pdf("./ch2_case2-2_histogram.pdf",family='GB1')
par(c(3, 3))
for (i in 1:length(loan.nvars)){
hist(loan.nvars[,i],
xlab=names(loan.nvars)[i],
main=paste("Histogram of",names(loan.nvars)[i]),
col = "grey")
}
dev.off()
colnames(bankLoan)
colnames(loan.nvars)
# log.vars = c("Income", "CreditRatio", "OtherDebt")
log.vars = c(4, 6, 7)
# new_col = list()
for (i in log.vars){
var.names = colnames(loan.nvars)
cur_name = paste(var.names[i],  '.', 1, sep = '')
new_col = log(loan.nvars[, i] + 1)
# LoanNew = cbind(bankLoan)
loan.nvars[[cur_name]] = new_col
hist(loan.nvars[[cur_name]],
xlab=paste(var.names[i],  '.', 1, sep = ''),
main=paste("Histogram of",cur_name),
col = "grey")
}
loanNew = cbind(bankLoan, loan.nvars[,9:11])
colnames(loanNew)
#
# numeric:
t.test(loanNew$Address ~ loanNew$Default)
#
# numeric:
chisq.test(loanNew$Address ~ loanNew$Default)
str(loanNew)
#
# numeric:
chisq.test(loanNew$Address ~ loanNew$Default)
#
# numeric:
chisq.test(table(loanNew$Address ~ loanNew$Default))
#
# numeric:
chisq.test(table(loanNew$Address, loanNew$Default))
for (i in colnames(loanNew)[-c(4, 9)]){
t.test(loanNew[[i]], loanNew$Default)
}
??t.test
for (i in colnames(loanNew)[-c(4, 9)]){
str(t.test(loanNew[[i]], loanNew$Default))
}
print(t.test(loanNew[[i]], loanNew$Default))
for (i in colnames(loanNew)[-c(4, 9)]){
str(t.test(loanNew[[i]], loanNew$Default))
print("-------------------------------")
}
for (i in colnames(loanNew)[-c(4, 9)]){
t.test(loanNew[[i]], loanNew$Default)
print("-------------------------------")
}
for (i in colnames(loanNew)[-c(4, 9)]){
t.test(loanNew[[i]], loanNew$Default) %>% summary()
print("-------------------------------")
}
#
# numeric:
chisq.test(table(loanNew$Address, loanNew$Default))
for (i in colnames(loanNew)[-c(4, 9)]){
t.test(loanNew[[i]], loanNew$Default)
print("-------------------------------")
}
for (i in colnames(loanNew)[-c(4, 9)]){
t.test(loanNew[[i]] ~ loanNew$Default)
print("-------------------------------")
}
cor(loanNew)
help(cor)
cor(x=loanNew)
loanNew
cor(loanNew)
cor(loanNew[,-c(4)])
cor.test(loanNew[,-c(4)])
help(cor.test)
library(corrplot)
install.packages("corrplot")
library(corrplot)
corrplot(cor(loanNew[,-c(4)]))
corrplot(corr=cor(loanNew[,-c(4)]))
corrplot(corr=cor(loanNew[,-c(4)]), method="number")
loanNew = loanNew[, -c(4, 6, 7)]
colnames(loanNew)
loanNew = cbind(bankLoan, loan.nvars[,9:11])
colnames(loanNew)
loanNew = loanNew[, -c(5, 7, 8)]
colnames(loanNew)
#
# numeric:
chisq.test(table(loanNew$Address, loanNew$Default))
cor(loanNew[,-c(4)])
library(corrplot)
corrplot(corr=cor(loanNew[,-c(4)]))
corrplot(corr=cor(loanNew[,-c(4)]), method="number")
t.test(loanNew$Age ~ loanNew$Default)
t.test(loanNew$Age ~ loanNew$Default)
t.test(loanNew$Edu ~ loanNew$Default)
t.test(loanNew$Income.1 ~ loanNew$Default)
t.test(loanNew$OtherDebt.1 ~ loanNew$Default)
##进行欠抽样使得响应者的比例达到1/3
loan1 <- loanNew[loanNew$Default==1,]
loan0 <- loanNew[loanNew$Default==0,]
n1 <- dim(loan1)[1]
#创建变量n1记录响应者的观测数
n0 <- 2*n1
#创建变量n0记录非响应者的观测数,它的值是响应者观测数n1的两倍。
loan0 <- loan0[sample(1:dim(loan0)[1],n0),]
#从非响应者的数据中随机抽取n0个观测,仍然存为loan0数据集。
#  使用sample函数从非响应者的观测序号中进行简单随机抽样，抽取出n0个。
#    “1:dim(loan0)[1]”限定抽样范围为从1到非响应者总数的所有整数，
#    n0指定样本数。
loanNew1 <- rbind(loan1,loan0)
write.csv(loan_nvars_description,"out/loan_nvars_description.csv")
write.csv(loanNew,"out/loanNew.csv",row.names=FALSE)
write.csv(loanNew1,"out/loanNew1.csv",row.names=FALSE)
summary(loanNew)
length(loanNew$Default)
length(loanNew[loanNew$Default==1])
length(loanNew[loanNew$Default==1,])
length(loanNew[,loanNew$Default==1])
length(loanNew[,loanNew$Default==1])
length(loanNew[loanNew$Default==1, ])
length(loanNew[loanNew$Default==0, ])
length(loanNew)
dim(loanNew[loanNew$Default==1, ])
dim(loanNew[loanNew$Default==1, ])
dim(loanNew[loanNew$Default==0, ])
# -----------异常值--------------
boxplot(bankLoan$Age)
# -----------异常值--------------
boxplot(bankLoan$Age)
colnames(bankLoan)
boxplot(bankLoan$Edu)
boxplot(bankLoan$WorkAge)
boxplot(bankLoan$Address)
boxplot(bankLoan$Income)
boxplot(bankLoan$DebtRatio)
boxplot(bankLoan$CreditDebt)
boxplot(bankLoan$OtherDebt)
# -----------异常值--------------
boxplot(bankLoan$Age, xlab=Age)
# -----------异常值--------------
boxplot(bankLoan$Age, xlab="Age")
# -----------异常值--------------
boxplot(bankLoan$Age, ylab="Age")
# -----------异常值--------------
for (col in colnames(bankLoan)[-c(4, 9)]){
boxplot(bankLoan$Age, ylab=col)
}
# -----------异常值--------------
for (col in colnames(bankLoan)[-c(4, 9)]){
boxplot(bankLoan[[col]], ylab=col)
}
# -----------异常值--------------
for (col in colnames(bankLoan)[-c(4, 9)]){
vioplot(bankLoan[[col]], ylab=col)
}
library(vioplot)
install.packages("vioplot")
# -----------异常值--------------
library(vioplot)
for (col in colnames(bankLoan)[-c(4, 9)]){
vioplot(bankLoan[[col]], ylab=col)
}
quantile(bankLoan$Edu, 0.25)
quantile(bankLoan$Edu, 0.75)
class(quantile(bankLoan$Edu, 0.75))
quantile(bankLoan$Edu, c(0.25, 0.75))
class(quantile(bankLoan$Edu, c(0.25, 0.75)))
print(quantile(bankLoan$Edu, c(0.25, 0.75)))
type(quantile(bankLoan$Edu, c(0.25, 0.75)))
plot(bankLoan)
uname(quantile(bankLoan$Edu, c(0.25, 0.75)))
unname(quantile(bankLoan$Edu, c(0.25, 0.75)))
a = unname(quantile(bankLoan$Edu, c(0.25, 0.75)))
class(a)
is.vector(a)
for (col in colnames(bankLoan)[-c(4, 9)]){
# vioplot(bankLoan[[col]], ylab=col)
boxplot(bankLoan[[col]], ylab=col)
}
for (col in colnames(bankLoan)[-c(4, 9)]){
# vioplot(bankLoan[[col]], ylab=col)
hist(bankLoan[[col]], xlab=col)
}
for (col in colnames(bankLoan)[-c(4, 9)]){
# vioplot(bankLoan[[col]], ylab=col)
hist(bankLoan[[col]], xlab=col,
main=paste("Histogram of ", col, sep=""))
}
set.seed(100)
dixon.test(bankLoan$Edu)
install.packages("outliers")
library(outliers)
set.seed(100)
dixon.test(bankLoan$Edu)
help(cut)
help(seq)
cut(bankLoan$Age, breaks = seq(10, 60, 10))
hist(cut(bankLoan$Age, breaks = seq(10, 60, 10)))
a = cut(bankLoan$Age, breaks = seq(10, 60, 10)) %>% unique()
hist(a)
a = cut(bankLoan$Age, breaks = seq(10, 60, 10)) %>% unique()
hist(a)
a
hist(bankLoan$Edu)
for (col in colnames(bankLoan)[-c(4, 9)]){
# vioplot(bankLoan[[col]], ylab=col)
hist(bankLoan[[col]], xlab=col,
main=paste("Histogram of ", col, sep=""))
}
